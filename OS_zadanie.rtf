{\rtf1\ansi\ansicpg1250\cocoartf1561
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20720\viewh11860\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #! /bin/csh\
#\
# Meno: Varga Jozef, kr. 2\
# Kruzok: 02\
# Datum: pripravne_csh (id: 3)\
# Zadanie: zadanie16\
#\
# Text zadania:\
#\
# Vypiste vsetkych pouzivatelov, ktori neboli za poslednu dobu (odkedy system\
# zaznamenava tieto informacie) prihlaseni.\
# Ak bude skript spusteny s prepinacom -g <group>, vypise len pouzivatelov,\
# ktori neboli za poslednu dobu prihlaseni a patria do skupiny <group>, ktora\
# je zadana ako cislo.\
# Pomocka: pouzite prikaz last a informacie z /etc/passwd.2001.\
#\
# Syntax:\
# zadanie1.csh [-h] [-g <group>]\
#\
# Format vypisu bude nasledovny:\
# Output: '<login_name> <group> <full_name>'\
#\
# Priklad vystupu:\
# Output: 'cernicka 520 Cernicka Martin'\
# Output: 'chudik 520 Chudik Alexander'\
#\
#\
# Program musi osetrovat pocet a spravnost argumentov. Program musi mat help,\
# ktory sa vypise pri zadani argumentu -h a ma tvar:\
# Meno programu (C) meno autora\
#\
# Usage: <meno_programu> <arg1> <arg2> ...\
#    <arg1>: xxxxxx\
#    <arg2>: yyyyy\
#\
# Parametre uvedene v <> treba nahradit skutocnymi hodnotami.\
# Ked ma skript prehladavat adresare, tak vzdy treba prehladat vsetky zadane\
# adresare a vsetky ich podadresare do hlbky.\
# Pri hladani maxim alebo minim treba vzdy najst maximum (minimum) vo vsetkych\
# zadanych adresaroch (suboroch) spolu. Ked viacero suborov (adresarov, ...)\
# splna maximum (minimum), treba vypisat vsetky.\
#\
# Korektny vystup programu musi ist na standardny vystup (stdout).\
# Chybovy vystup programu by mal ist na chybovy vystup (stderr).\
# Chybovy vystup musi mat tvar (vratane apostrofov):\
# Error: 'adresar, subor, ... pri ktorom nastala chyba': popis chyby ...\
# Ak program pouziva nejake pomocne vypisy, musia mat tvar:\
# Debug: vypis ...\
#\
# Poznamky: (sem vlozte pripadne poznamky k vypracovanemu zadaniu)\
#\
# Riesenie:\
\
\
if ($#argv > 0) then\
	switch ("$argv[1]")\
		case -h:\
				echo "pripravne1.csh (C) Jozef Varga"\
				echo "Usage: zadanie1.csh [-h] [-g <group>]"\
				echo "-h: help - manual ku skriptu"\
				echo "-g: Ak bude sript spusteny s prepinacom -g <group>, vypise len pouzivatelov, ktori neboli za poslednu dobu prihlaseny a patria do skupiny <group>, ktora je zadana ako cislo"\
				breaksw\
		case -g:\
				set skupina\
				if($#argv == 2) then\
					if(`echo "$argv[2]" | grep -Ec '^[0-9]+'` >= 0) then\
						set skupina = $argv[2]\
					else\
						echo "Error: chyba argumentu zadaj cislo" > /dev/stderr\
						exit 1\
					endif\
				else\
					echo "Error: chyba argument zadaj cislo" > /dev/stderr\
					exit 1\
				endif\
				set zhoda\
				set meno_passwd meno_last\
				set meno_last = ($meno_last:q "`last | cut -d ' ' -f1`")\
				set meno_passwd = ($meno_passwd:q "`cut -d ':' -f1 < /etc/passwd.2001`")\
				foreach meno ($meno_passwd:q)\
					@ zhoda = `echo $meno_last |& grep -c "\\<$meno\\>"`\
					if ($zhoda == 0 && $skupina == `grep "^$meno\\:" /etc/passwd.2001 | cut -d "," -f1 | cut -d ":" -f4`) then\
						echo Output: \\'`grep "^$meno\\:" /etc/passwd.2001 | cut -d "," -f1 | cut -d ":" -f1 -f4 -f5 | tr ":" " "`\\'\
					endif\
				end\
				breaksw\
		default:\
				echo "Error: chyba prepinaca" > /dev/stderr\
				exit 1\
				breaksw; break\
		endsw\
		shift\
else if($#argv == 0) then\
	set zhoda\
	set meno_passwd meno_last\
	set meno_last = ($meno_last:q "`last | cut -d ' ' -f1`")\
	set meno_passwd = ($meno_passwd:q "`cut -d ':' -f1 < /etc/passwd.2001`")\
	foreach meno ($meno_passwd:q)\
	@ zhoda = `echo $meno_last |& grep -c "\\<$meno\\>"`\
	if ($zhoda == 0) then\
		echo Output: \\'`grep "^$meno\\:" /etc/passwd.2001 | cut -d "," -f1 | cut -d ":" -f1 -f4 -f5 | tr ":" " "`\\'\
	endif\
	end\
endif}